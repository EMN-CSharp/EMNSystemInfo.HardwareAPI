<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>net472;netcoreapp3.1;netstandard2.0;net5.0;net6.0</TargetFrameworks>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>

  <PropertyGroup>
    <AssemblyTitle>EMNSystemInfo.HardwareAPI</AssemblyTitle>
    <Product>EMNSystemInfo.HardwareAPI</Product>
    <Company>EMN-CSharp</Company>
    <Copyright>Copyright © EMN-CSharp and Contributors. | Partial Copyright © LibreHardwareMonitor and Contributors. | Partial Copyright © Michael Möller &lt;mmoeller@openhardwaremonitor.org&gt; and Contributors.</Copyright>
    <Version>0.2.9.1</Version>
    <FileVersion>0.2.9.1</FileVersion>
    <ProductVersion>0.2.9.1</ProductVersion>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <Description>EMNSystemInfo.HardwareAPI is a hardware library for Windows based on Libre Hardware Monitor. It provides a base model to access hardware information.</Description>
    <RepositoryUrl>https://github.com/EMN-CSharp/EMNSystemInfo.HardwareAPI/</RepositoryUrl>
    <PackageReleaseNotes>· Added Update() base method for Processor class
· Renamed IntelCPU.CoreFrequencyClocks to CoreClockSpeeds
· Renamed AMD0FCPU.CoreClockSpeed to CoreClockSpeeds
· IntelCPU: Access power sensors info with an IntelPowerSensors instance and properties representing each power sensor
· Make version info publicly available through the VersionInfo static class
· Changed the way of getting SMU sensors in AMD17CPU class
· Add more properties to the Processor class (Family, Model, Stepping, PackageType, CoreCount, ThreadCount)
· Now the library can provide generic processor info with user privileges
· Fixed possible resource leak if the detected processor is an AMD17CPU
· Rename load and dispose methods of hardware group classes so they are less obvious (Processors.LoadProcessors() is Processors.Load(), GPUs.DisposeGPUs() is GPUs.Dispose() and so on)</PackageReleaseNotes>
    <PackageTags>open-source opensource csharp dotnet hardware information monitoring library</PackageTags>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  
  <ItemGroup>
    <Folder Include="LPC\EC\" />
    <Folder Include="Resources\" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Resources\inpout32.dll" />
    <EmbeddedResource Include="Resources\inpoutx64.dll" />
    <EmbeddedResource Include="Resources\WinRing0.sys" />
    <EmbeddedResource Include="Resources\WinRing0x64.sys" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0' OR '$(TargetFramework)' == 'netcoreapp3.1' OR '$(TargetFramework)' == 'net5.0' OR '$(TargetFramework)' == 'net6.0'">
    <PackageReference Include="System.Diagnostics.PerformanceCounter" Version="5.0.0" />
    <PackageReference Include="Microsoft.Win32.Registry" Version="5.0.0" />
    <PackageReference Include="System.IO.Ports" Version="6.0.0" />
    <PackageReference Include="System.IO.FileSystem.AccessControl" Version="5.0.0" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="HidSharp" Version="2.1.0" />
    <PackageReference Include="System.Management" Version="5.0.0" />
  </ItemGroup>
  
  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath></PackagePath>
    </None>
  </ItemGroup>

</Project>
